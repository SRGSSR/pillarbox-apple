# frozen_string_literal: true

default_platform(:ios)

# Helpers

def key_filepath
  File.expand_path('../Configuration/AppStoreConnect_API_Key.p8')
end

def application_xcconfig_filepath
  'Demo/Xcode/Shared/Targets/Application.xcconfig'
end

def login_to_app_store_connect
  app_store_connect_api_key(
    key_id: ENV['KEY_ID'],
    issuer_id: ENV['KEY_ISSUER_ID'],
    key_filepath: key_filepath
  )
end

def marketing_version
  get_xcconfig_value(
    path: application_xcconfig_filepath,
    name: 'MARKETING_VERSION'
  )
end

def bump_testflight_build_number(app_identifier)
  build_number = latest_testflight_build_number(
    app_identifier: app_identifier,
    platform: ENV['TESTFLIGHT_PLATFORM']
  ) + 1
  update_xcconfig_value(
    path: application_xcconfig_filepath,
    name: 'CURRENT_PROJECT_VERSION',
    value: build_number.to_s
  )
  build_number
end

def build_and_sign_app(configuration)
  build_app(
    project: 'Demo/Pillarbox-demo.xcodeproj',
    configuration: configuration,
    scheme: 'Pillarbox-demo',
    destination: "generic/platform=#{ENV['PLATFORM']}",
    export_team_id: ENV['TEAM_ID'],
    output_directory: 'Binaries',
    xcargs: "-authenticationKeyIssuerID #{ENV['KEY_ISSUER_ID']} -authenticationKeyID #{ENV['KEY_ID']} " \
            "-authenticationKeyPath #{key_filepath} -allowProvisioningUpdates"
  )
end

def add_version_badge(label, message, color)
  add_badge(
    no_badge: true,
    shield: "#{label}-#{message}-#{color}",
    shield_scale: ENV['SHIELD_SCALE'],
    shield_gravity: 'South',
    glob: ENV['ICON_GLOB']
  )
end

# FIXME: Temporary workaround for upload with Xcode 14, see https://github.com/fastlane/fastlane/issues/20371
def upload_build_to_testflight
  xcversion(version: '~> 13')
  upload_to_testflight
  xcversion(version: '~> 14')
end

# Lanes

platform :ios do
  before_all do
    ensure_git_status_clean
    xcversion(version: '~> 14')
  end

  desc 'Build and distribute a demo app nightly build'
  lane :nightly do
    login_to_app_store_connect
    build_number = bump_testflight_build_number('ch.srgssr.Pillarbox-demo.nightly')
    add_version_badge(marketing_version, build_number, 'orange')
    build_and_sign_app('Nightly')
    reset_git_repo(skip_clean: true)
    changelog_from_git_commits
    upload_build_to_testflight
    reset_git_repo
  end

  desc 'Build and distribute a demo app release build'
  lane :release do
    login_to_app_store_connect
    add_version_badge('Ver.', marketing_version, 'blue')
    build_and_sign_app('Release')
    reset_git_repo(skip_clean: true)
    changelog_from_git_commits
    upload_build_to_testflight
    reset_git_repo
  end

  desc 'Build and run unit tests'
  lane :tests do
    run_tests(scheme: 'Appearance', device: ENV['DEVICE'], package_path: '.', result_bundle: true)
    run_tests(scheme: 'CoreBusiness', device: ENV['DEVICE'], package_path: '.', result_bundle: true)
    run_tests(scheme: 'Diagnostics', device: ENV['DEVICE'], package_path: '.', result_bundle: true)
    run_tests(scheme: 'Player', device: ENV['DEVICE'], package_path: '.', result_bundle: true)
    run_tests(scheme: 'UserInterface', device: ENV['DEVICE'], package_path: '.', result_bundle: true)
  end
end
