@Tutorial(time: 0) {
    @Intro(title: "Creating a basic user interface") {
        Learn how you create a custom player user interface for your app. Discover how you can iterate on your ideas. Add basic playback controls and learn how to use playback state to adjust the appearance of your user interface. 
    }

    @Section(title: "Play and Pause") {
        @ContentAndMedia {
            Create a basic play and pause user interface by following these steps:
        }

        @Steps {
            @Step {
                Start by creating a content view.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-1.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-1.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Import the player package.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-2.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-2.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Instantiate the player.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-3.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-3.jpg, alt: "A screenshot from an iPhone")
                }
            }

            @Step {
                Add the video view to display the player content.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-4.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-4.jpg, alt: "A screenshot from an iPhone")
                }
            }

            @Step {
                Add a button to play and pause the player.
                
                At this step you are able to play and pause the player.
                But the button has the wrong state.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-5.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-5.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Update the button to reflect the player state.

                @Code(name: "ContentView.swift", file: basic-ui-play-pause-tutorial-6.swift) {
                    @Image(source: basic-ui-play-pause-tutorial-6.jpg, alt: "A screenshot from an iPhone")
                }
            }
        }
    }
    
    @Section(title: "Backward and Forward Seek") {
        @ContentAndMedia {
            Now we can go further by managing the seek backward and the seek forward to navigate through the media stream.
        }
        
        @Steps {
            @Step {
                We can start by adding an horizontal stack that will contain all the buttons.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-1.swift) {
                    @Image(source: basic-ui-seek-tutorial-1.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Add a new button for the backward seek.
                
                At this step the button has no action.
                So let's use the player to add backward action.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-2.swift) {
                    @Image(source: basic-ui-seek-tutorial-2.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Add the backward action.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-3.swift) {
                    @Image(source: basic-ui-seek-tutorial-3.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                We can proceed in the same manner with the forward action.
                
                Great! We've added two buttons. 
                However, as you can see, by default, the backward and forward actions seek -10 and +10 seconds, respectively.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-4.swift) {
                    @Image(source: basic-ui-seek-tutorial-4.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                To update this behavior, we can use the player configuration.
                Let's add a configuration with new intervals, -5 seconds for the backward action and +15 seconds for the forward action.
                
                Note that we don't use minus interval for the backward interval.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-5.swift) {
                    @Image(source: basic-ui-seek-tutorial-5.jpg, alt: "A screenshot from an iPhone")
                }
            }
            
            @Step {
                Don't forget to update your UI consequently.

                @Code(name: "ContentView.swift", file: basic-ui-seek-tutorial-6.swift) {
                    @Image(source: basic-ui-seek-tutorial-6.jpg, alt: "A screenshot from an iPhone")
                }
            }
        }
    }
}
